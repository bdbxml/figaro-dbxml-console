//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Figaro.Utilities.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DbxmlResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DbxmlResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Figaro.Utilities.Resources.DbxmlResources", typeof(DbxmlResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DBXML.
        /// </summary>
        internal static string DbxmlAllUpper {
            get {
                return ResourceManager.GetString("DbxmlAllUpper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment variable &apos;DBXML&apos; not set to anything - using current working directory instead..
        /// </summary>
        internal static string EnvironmentVariableNotSet {
            get {
                return ResourceManager.GetString("EnvironmentVariableNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This product version does not support transactions. You must use Figaro TDS or higher in order to support transactions..
        /// </summary>
        internal static string MustUseTDS {
            get {
                return ResourceManager.GetString("MustUseTDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (none).
        /// </summary>
        internal static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to non-unique.
        /// </summary>
        internal static string NonUnique {
            get {
                return ResourceManager.GetString("NonUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while parsing the query string. Please check your query and try again..
        /// </summary>
        internal static string QueryError {
            get {
                return ResourceManager.GetString("QueryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource type &apos;{0}&apos; does not have an accessible get for the &apos;{1}&apos; property..
        /// </summary>
        internal static string ResourcePropertyDoesNotHaveAccessibleGet {
            get {
                return ResourceManager.GetString("ResourcePropertyDoesNotHaveAccessibleGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; on resource type &apos;{1}&apos; is not a string type..
        /// </summary>
        internal static string ResourcePropertyNotStringType {
            get {
                return ResourceManager.GetString("ResourcePropertyNotStringType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource type &apos;{0}&apos; does not have an accessible static property named &apos;{1}&apos;..
        /// </summary>
        internal static string ResourceTypeDoesNotHaveProperty {
            get {
                return ResourceManager.GetString("ResourceTypeDoesNotHaveProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to successfully added {0} {1} index of key type {2} on path type {3}, node type {4} to {5}, namespace {6}.
        /// </summary>
        internal static string SuccessfulAddIndex {
            get {
                return ResourceManager.GetString("SuccessfulAddIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment doesn&apos;t support transactions or have transactions enabled..
        /// </summary>
        internal static string TransactionsNotEnabled {
            get {
                return ResourceManager.GetString("TransactionsNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unique.
        /// </summary>
        internal static string Unique {
            get {
                return ResourceManager.GetString("Unique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working directory not specified but %DBXML% environment variable found. Setting working directory to %DBXML% environment variable value.
        /// </summary>
        internal static string WorkingDir2 {
            get {
                return ResourceManager.GetString("WorkingDir2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working directory set to {0}.
        /// </summary>
        internal static string WorkingDirectorySetTo0 {
            get {
                return ResourceManager.GetString("WorkingDirectorySetTo0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working directory set to %DBXML% environment &apos;{0}&apos;..
        /// </summary>
        internal static string WorkingDirSetToDbxmlEnv0 {
            get {
                return ResourceManager.GetString("WorkingDirSetToDbxmlEnv0", resourceCulture);
            }
        }
    }
}
